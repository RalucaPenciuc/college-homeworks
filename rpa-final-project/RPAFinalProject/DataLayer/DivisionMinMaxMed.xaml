<Activity mc:Ignorable="sap sap2010" x:Class="DivisionMinMaxMed" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_inputCuiDataTable" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_divisionType" Type="InArgument(x:String)" />
    <x:Property Name="in_cuiName" Type="InArgument(x:String)" />
    <x:Property Name="inOut_cuiSheetIndex" Type="InOutArgument(x:Int32)" />
    <x:Property Name="inOut_centralizatorIndex" Type="InOutArgument(x:Int32)" />
    <x:Property Name="inOut_minMaxMedResult" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="inOut_medIndex" Type="InOutArgument(x:Int32)" />
    <x:Property Name="inOut_medResult" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>574.4,1659.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="DivisionMinMaxMed" sap:VirtualizedContainerService.HintSize="534.4,1579.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataView" Name="inputCuiDataView" />
      <Variable x:TypeArguments="sd:DataTable" Name="distinctDivisionValues" />
      <Variable x:TypeArguments="x:Int32" Name="currentDivisionStep" />
      <Variable x:TypeArguments="sd:DataTable" Name="departamentMinMaxMed" />
      <Variable x:TypeArguments="sd:DataTable" Name="divisionInputDataTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="divisionMinMaxMed" />
      <Variable x:TypeArguments="sd:DataTable" Name="tempMedResult" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="512,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Computing data for &quot; + in_divisionType + &quot;...&quot;]" />
    <Assign DisplayName="Initialize DataView from DataTable" sap:VirtualizedContainerService.HintSize="512,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataView">[inputCuiDataView]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataView">[new DataView(in_inputCuiDataTable)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Sort DataView by given column" sap:VirtualizedContainerService.HintSize="512,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[inputCuiDataView.Sort]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_divisionType]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Get distinct values from DataView" sap:VirtualizedContainerService.HintSize="512,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[distinctDivisionValues]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[inputCuiDataView.ToTable(True, in_divisionType)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Initialize step used for iteration" sap:VirtualizedContainerService.HintSize="512,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[currentDivisionStep]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="512,60" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[tempMedResult]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[inOut_medResult]</InArgument>
      </Assign.Value>
    </Assign>
    <While DisplayName="Iterate through distinct divisions" sap:VirtualizedContainerService.HintSize="512,821.6" sap2010:WorkflowViewState.IdRef="While_1" Condition="[currentDivisionStep &lt; distinctDivisionValues.Rows.Count]">
      <Sequence sap:VirtualizedContainerService.HintSize="486.4,662.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:FilterDataTable DataTable="[in_inputCuiDataTable]" DisplayName="Keep relevant row for current division" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[divisionInputDataTable]" SelectColumnsMode="Remove">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">[in_divisionType]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[distinctDivisionValues.Rows(currentDivisionStep).Item(0).ToString]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ComputeData For Division" sap:VirtualizedContainerService.HintSize="464,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="DataLayer\ComputeData.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_divisionDataTable">[divisionInputDataTable]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_divisionName">[distinctDivisionValues.Rows(currentDivisionStep).Item(0).ToString]</InArgument>
            <InOutArgument x:TypeArguments="x:Int32" x:Key="inOut_centralizatorIndex">[inOut_centralizatorIndex]</InOutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_cuiName">[in_cuiName]</InArgument>
            <InOutArgument x:TypeArguments="x:Int32" x:Key="inOut_sheetIndex">[inOut_cuiSheetIndex]</InOutArgument>
            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inOut_minMaxMedResult">[inOut_minMaxMedResult]</InOutArgument>
            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inOut_medResult">[tempMedResult]</InOutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_divisionType">[in_divisionType]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <Assign DisplayName="Increment to the next division" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[currentDivisionStep]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[currentDivisionStep + 1]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[in_divisionType.Equals(&quot;Departament&quot;)]" DisplayName="If division type is Departament" sap:VirtualizedContainerService.HintSize="464,209.6" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <ui:MergeDataTable Destination="[inOut_medResult]" DisplayName="Merge temp result to out result" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MergeDataTable_2" MissingSchemaAction="Add" Source="[tempMedResult]" />
          </If.Then>
        </If>
      </Sequence>
    </While>
  </Sequence>
</Activity>